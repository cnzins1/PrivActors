-- Function to handle actor's scripts by temporarily disabling them
local function handleActorScripts(scripts, playerGui)
    for _, sc in ipairs(scripts) do
        sc.Parent = playerGui
        sc.Disabled = false
    end
end

-- Function to delete non-script children of an actor
local function deleteNonScriptChildren(actor)
    for _, c in ipairs(actor:GetChildren()) do
        if not c:IsA('Script') then
            c:Destroy()
        end
    end
end

-- Function to bypass actors by disabling their scripts and deleting the actor
local function bypassActors(actor, playerGui)
    local scripts = {}
    for _, c in ipairs(actor:GetChildren()) do
        if c:IsA('Script') then
            table.insert(scripts, c)
            c.Disabled = true
        end
    end

    handleActorScripts(scripts, playerGui)

    -- Instead of setting the actor's parent to nil, destroy it to remove from GUI
    actor:Destroy()
    warn("Actors deleted by zinso")
end

-- Find the player's GUI
local playerGui = game.Players.LocalPlayer:WaitForChild('PlayerGui')
if not playerGui then
    -- Display a warning message if PlayerGui is not found
    warn("PlayerGui not found. Unable to bypass.")
    return
end

-- Connect the DescendantAdded event to handle actors
game.Players.LocalPlayer.PlayerGui.DescendantAdded:Connect(function(v)
    if v:IsA("Actor") then
        -- Create a folder to organize GameClient or LobbyClient
        local f = Instance.new("Folder", v.Parent)
        if v:FindFirstChild("GameClient") then
            v:FindFirstChild("GameClient").Parent = f
        else
            v:FindFirstChild("LobbyClient").Parent = f
        end

        -- Call bypassActors function to handle the actor's scripts
        bypassActors(v, playerGui)
    end
end)

-- Additional bypass scripts
local targetPlaceId = 13253735473
if game.PlaceId == targetPlaceId then
    warn("v2 loading - bypassing")

    local y
    game.Players.LocalPlayer.PlayerGui.DescendantAdded:Connect(function(G)
        if G:IsA("Actor") then
            y = Instance.new("Folder", G.Parent)
            if G:FindFirstChild("GameClient") then
                G:FindFirstChild("GameClient").Parent = y
            else
                G:FindFirstChild("LobbyClient").Parent = y
            end
        end
    end)

    wait(10)
    print("45%")
    warn("Actor Bypass Loaded Success")

    local L
    L = hookmetamethod(game, "__index", newcclosure(function(...)
        local G, w = ...
        if not checkcaller() and w == "Size" and G.Name == "Head" then
            return Vector3.new(0, 0, 0)
        end
        return L(...)
    end))
    print("65%")
    warn("Hitbox bypass test loading")

    local Nf
    Nf = hookmetamethod(game, "__index", newcclosure(function(...)
        local G, w = ...
        if not checkcaller() and w == "CFrame" and G.Name == "Camera" and G == Camera then
            return _Camera.GetCFrame()
        end
        return Nf(...)
    end))
    warn("Cam Bypass test Loading")
    print("100%")
    print("Join Now")

    -- Wrap the bypass scripts with pcall to catch any errors
    local success, error_message = pcall(function()
        local Gf = tick()
        local mf = game.Players.LocalPlayer:GetMouse()
        local zf = game:GetService("Lighting"):FindFirstChildOfClass("Sky")
        if not zf then
            zf = Instance.new("Sky", game:GetService("Lighting"))
        end
    end)

    if not success then
        warn("Error during bypass:", error_message)
    end
end
